@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');

// Reset CSS

/* Box sizing rules */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
	margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
	list-style: none;
}

/* Set core root defaults */
html:focus-within {
	scroll-behavior: smooth;
}

/* Set core body defaults */
body {
	min-height: 100vh;
	text-rendering: optimizeSpeed;
	line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
	text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
	max-width: 100%;
	display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
	font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
	html:focus-within {
		scroll-behavior: auto;
	}

	*,
	*::before,
	*::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

// Snow background effect - https://codepen.io/keithclark/pen/DjXzBw

$d: 70; // density
$w: 600; // grid size
$s: 5s; // speed

// Generate the snow image using radial gradients
$grad: ();
@for $i from 0 to $d {
	$v: random(4) + 2;
	$a: random(5) * 0.1 + 0.5;
	$grad: $grad,
		radial-gradient(
			$v +
				px
				$v +
				px
				at
				(random($w - $v * 2) + $v) +
				px
				(random($w - $v * 2) + $v) +
				px,
			rgba(255, 255, 255, $a) 50%,
			rgba(0, 0, 0, 0)
		) !global;
}

.snow,
.snow::before,
.snow::after {
	position: absolute;
	top: -$w + px;
	left: 0;
	bottom: 0;
	right: 0;
	background-image: $grad;
	background-size: $w + px $w + px;
	animation: snow $s linear infinite;
	content: '';
	z-index: -5;
}
.snow::after {
	margin-left: -$w/3 + px;
	opacity: 0.4;
	animation-duration: $s * 2;
	animation-direction: reverse;
	filter: blur(3px);
}
.snow::before {
	animation-duration: $s * 3;
	animation-direction: reverse;
	margin-left: -$w/2 + px;
	opacity: 0.65;
	filter: blur(1.5px);
}
@keyframes snow {
	to {
		transform: translateY($w + px);
	}
}

// General Stylings

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

.offscreen {
	position: absolute;
	left: -10000px;
}

input,
button {
	font: inherit;
}

// Need to fix the background scrolling, unhappy with scrollbar
html {
	font-family: 'Poppins', sans-serif;
	background: linear-gradient(#123 30%, #667);
	background-repeat: no-repeat;
	background-attachment: fixed;
}

body {
	min-height: 100vh;
	color: #fff;
	padding: 1rem;
	display: flex;
	flex-direction: column;
}

main {
	flex-grow: 1;
	margin: auto;
	width: 100%;
	max-width: 800px;
	display: flex;
	flex-flow: column nowrap;
}

section {
	border: 1px solid whitesmoke;
	border-radius: 10px;
	padding: 0.5rem;
}

.button {
	border-radius: 10px;
	min-width: 48px;
	min-height: 48px;
}

.button:hover {
	cursor: pointer;
}

.newItemEntry {
	position: sticky;
	top: 0;
	margin-bottom: 1rem;
}

.newItemEntry__form {
	display: flex;
	gap: 0.25rem;
	font-size: 1.5rem;
}

.newItemEntry__input {
	width: calc(100% - (0.25rem + 48px));
	flex-grow: 1;
	border: 2px solid whitesmoke;
	border-radius: 10px;
	padding: 0.5em;
}

.newItemEntry__button {
	background-color: transparent;
	color: whitesmoke;
	border: 3px dashed whitesmoke;
	padding: 0.75em;
}

.newItemEntry__button:hover,
.newItemEntry__button:focus {
	color: limegreen;
}

.listContainer {
	font-size: 1.5rem;
	flex-grow: 1;
	display: flex;
	flex-flow: column;
	gap: 1rem;
}

.listTitle {
	display: flex;
	justify-content: space-between;
	align-items: flex-end;
}

.listTitle__button {
	background-color: transparent;
	color: whitesmoke;
	padding: 0.25em;
}

.listItems {
	flex-grow: 1;
	display: flex;
	flex-flow: column nowrap;
	list-style-type: none;
}

.item {
	display: flex;
	align-items: center;
	padding-top: 1em;
	gap: 1em;
}

.item > input[type='checkbox'] {
	text-align: center;
	min-width: 2.5rem;
	min-height: 2.5rem;
	cursor: pointer;
}

.item > input[type='checkbox']:checked + label {
	text-decoration: line-through;
}

.item > label {
	flex-grow: 1;
	word-break: break-all;
}

.item > button:hover,
.item > button:focus {
	color: red;
}

@media (min-width: 768px) {
	section {
		padding: 1rem;
	}
	.newItemEntry__form {
		gap: 0.5rem;
	}
}
